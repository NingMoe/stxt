自傳
====
table.基本資料
中文姓名:      張簡稜剛
英文姓名:      Zhangjian Lenggang
性別:          男	
E-mail信箱:    fhopecc@gmail.com
出生日期:      民國 68 年 7 月 29 日
婚姻狀況:      已婚
目前兵役狀況:  役畢
電話：         0972009960, 076424165	
通訊地址:      83166 花蓮縣花蓮市府前路三十號
學歷：         南台科大資管所、師範大學家政系 
經歷：         積穗國中實習教師
		       歐萊禮公司翻譯
		       阮綜合醫院程式師
		       成大醫院約聘技術師
		       花蓮縣電子作業管理師
證照：         SCJP, 教師證
程式語言：     Python, Ruby, Javascript, Java, 
               Oracle D2k,C++, LISP
著作：         譯作：『歐萊禮:JAVA Swing 第二版-基礎篇』
			   譯作：『歐萊禮:JAVA Swing 第二版-進階篇』
				
table.年表
1979
  JUL - 出生於高雄市	

1997
  SEP - 進入師大家政系就讀

1998
  JAN - 加入樂團 Distortion

1999
  JUL - 自組樂團脫序，加入地下音樂社，於 BBS 站整理搖滾樂史
  OCT - 修服裝流行理論，
        因一篇使用法國羅蘭巴特符號學理論為架構，
        來分析服裝流行語言的報告，
        課堂講師付費請我為他說明符號學理論。

2000
  JUL - 加入樂團 JoJo Honey

2001
  JAN - 對哈伯瑪斯的批判理論及溝通理論深感興趣，
        開始準備考社會理論所
  APR - 考台大社會所理論組，
		未考上但社會學理論得 90 分，
		自覺仍是一種肯定
  JUL - 未考上社會理論所，師大畢業，進入積穗國中實習
  AUG - 開始於新店樂器行教授電吉他

2002
  APR - 譯作：『JAVA Swing 第二版-基礎篇』
        由 O'relly 出版 
  MAY - 考上 SCJP 認證 
  JUL - 積穗國中實習結束
  AUG - 研讀資料結構，用 JAVA 及 Rational Rose
        完成自已的 Collection 程式庫
  AUG - 學習 LISP 及 SCHEME 語言
  NOV - 入伍		

2003
  JUN - 開始負責高縣教官後勤人事系統，
        對會計有初步的認識	
  FEB - 譯作：『JAVA Swing 第二版-進階篇』 
        由 O'relly 出版 
  OCT - 受教育役管理幹部訓，升管理幹部
  NOV - 利用 ACCESS 建立教官人事系統，因無法
        與教育部中辦室第六科格式相容，只用於小部份的報表輸出

2004
  JAN - 研讀 Turing 的 1936 論文，
        開始深入研讀計算機、語言與數理邏輯的關係
  FEB - 接觸 Godel 1934 的論文，
        深入思考判定問題與人類語言的關係
  AUG - 退伍
  SEP - 深信 WEB APPLICATION 會成為主流，
        進行 WEB ERP 自由軟體的中文化工作，
        此專案以 PHP + MYSQL 為架構
  OCT - 進入醫院資訊室成為程式設計師	
  NOV - 接病歷室系統

2005
  JUN - 醫院試用期滿
  FEB - 接護理系統
  MAR - 因閱讀 IT' does't matter 這本書的影嚮，
        開始思考未來 IT 產業要如何走向，
        及 MIS 人員未來的角色。
  APR - 考進南台科大資管所在職生
  OCT - 轉門診放射科系統
  NOV - 轉門診醫囑系統，及病歷系統
	
2006
  MAR - 至成大醫院資訊室負責 EJB 住院系統的程式撰寫
  DEC - 獲選黎明文化基金會九十五年績優學生，獎學金 20000 元

2007
  MAR - 進入花蓮縣地方稅務局

自傳
----

我姓名為張簡稜剛，成長於高雄縣，
大學就讀師大家政系，碩士為南台科大資管所。

大學時代沈迷於搖滾樂並組了一個搖滾樂團，
畢業至台北縣實習家政教師，
因實習津貼一月僅八千元，所以晚上在新店樂器行教授電吉他賺取生活費。
實習期間開始學習 Java 並熱衷於 GUI 設計但苦無深入的參考書。

我的 Java 入門書是 Java In Nutshell，
由台灣歐萊禮公司出的中文版，資訊完整豐富，
故對歐萊禮的書有著專業印象。
由於在歐萊禮網站察覺 Java Swing 一直沒有中文版，
就決定自已翻譯這本書，我寄信至出版社說明意圖，
而歐萊禮也一直找不到適合的人譯 Swing，便給予我這個機會，
翻譯結束後為了測試自已 Java 學習的程度故報考 SCJP 並順利取得證照，
也從此養成直接閱讀原文書的習慣。
	
教育服務役
~~~~~~~~~~
實習結束至服教育役前這段空檔，
我自修了資料結構，
並用 Java 完全重寫 Collection 類別來學習資料結構，
同時開始廣泛的涉獵數理邏輯、C++ 及 Lisp 的書籍。
	
服教育役時負責協助長官處理近二百多人的後勤人事業務，
我利用 Excel 的公式驗算並核發人員薪資及計算考績，
讓我體驗到組織的事務工作可利用應用軟體來大幅改善效率。

退伍至進入第 1 份工作期間，
因為相信 Web Service 將會成為未來的應用程式的主流，
便自行研究一個外國的 ERP 軟體，WebERP ，
此專案發展工具是 PHP + MySQL，
從中我學習到 Web Application 
它的 thin client 和 Java 等 thick client 在介面設計上有何差異，
及應考慮的因素，並對 ERP 等企業系統有了基礎概觀。
	
阮綜合醫院資訊室
~~~~~~~~~~~~~~~~
退伍後進入阮綜合醫院資訊室，
負責開發醫院內部醫療資訊系統，
其架構為三層式資料庫，
主機為 IBM R6000 加 Linux，
RDBMS 為 Oracle， AP Server 為 Win2000 Server，
Client 端以 Win2000 為系統，及使用 Oracle D2K 為主要開發工具。
	
這是我開始接觸大型系統，因使用者眾多，
如何能在人、時間及機器資源都限制下，
滿足「使用者」的需求，是作為程式設計師的最大挑戰。


南台資管所
~~~~~~~~~~
於阮綜合醫院資訊室工作期間，我考入南台資管所，
當時醫院資訊室程式設計師需面對強勢的醫師及法令萬變的健保局，
實作出「易於維護，快速反應政策」的系統是有現實的考量，
再加上以往我便對語言剖析及機器推理相當感興趣，
所以我就讀南台資管所的題目便是導入語義網技術於法規檢核
來實現藥品檢核規則自動更新的功能，
其主要設計理念為以語意網的OWL模型來實作健保法規檢核系統，
在法規的知識表徵上，系統將所有的藥品規則視為醫療狀態的類別，
因此判別用藥的合法性，便可使用分類運算達成，這簡化了推理機的設計；
利用OWL支援類別繼承的語意，故能形成認知經濟性效應，
縮小醫療法規機器編碼長度；
最後OWL的語法能表示大部份規則型態，使得系統可以使用一個文件檔，
一種推理機模型便能表示所有的法規。
OWL簡化了健保給付規定自動化更新到醫院資訊系統的設計，
讓醫令系統成為更能即時反應健保法規的決策支援系統。
對醫院而言，這大幅節省法規變動時，資訊系統異動成本。
其次，對醫事管理單位而言，則能以較少的成本，
落實其法規控管於醫療資訊系統上，對抑止醫療資源浪費，
及提升病人安全是一大利器。

系統分析是能協助我快速符合使用者需求的方法。
幾次專案系統的設計，讓我把系統分析慢慢實踐在工作當中，
我在此學習到的並非技術層面的思考，而是系統層面，
扮演的角色成為如何能協調資訊系統與使用者實踐業務流程。
像是為了增進處理效率，以往設計資料庫時，需符合正規化理論，
	
成大醫院資訊室
~~~~~~~~~~~~~~
成大醫院資訊室負責 EJB 住院系統的程式撰寫。
	
最近讀了一本書 IT doesn't matter，
裡面論述了資訊系統所能扮演的策略面變少了，
而資訊系統的投資對組織的獲利往往沒有很大的正相關，
這個觀點帶給我很大的衝擊，重新思考 MIS 到底在企業能扮演什麼角色。

我得到一個答案，便是企業決策及流程策劃中就必須能有 MIS 的觀點，
因為資訊系統已成為連結一個組織的強大工具，任何決策都必須和資訊系統配合，
才能發揮綜效，也期許自已能夠負更大的責任，
有效的讓資訊系統能夠增進一個組織其競爭的能力。

推廣 SVN

學習 RUBY

花蓮縣地方稅務局
~~~~~~~~~~~~~~~~
95年通過基層特考資訊處理職系三等考試，
於次年3月分發至花蓮縣地方稅務局擔任管理師，
初期主要負責機房主機、網路設備及資料庫管理，
並利用腳本語言開發設備紀錄、設定自動備份程式，
伺服器、網路及資料庫自動監控程式，
程式設計師的經驗，讓我習於將 MIS 例行工作自動化。

100年財政部推行地方稅資訊系統再造，
期間負責差勤、公文線上簽核系統及影像掃描系統的導入，
這個專案的參與使我認識到導入前的輔導、
系統測試的人員、測試資料及時程的規劃，
都對導入的成功有重大影響。

100年升任股長開始負責資訊採購，涵蓋資訊設備採購、資訊系統的建置，
這段期間學習如何規畫並引入外部資源協助組織的資訊運作，
並逐漸熟悉政府的採購流程、規格訂定、訪價及與廠商如何溝通等事務。

推行主機虛擬化，

104年再造後因應主機設備減少，規畫機房整建工程，
並於次年3月完工，規畫及施工期間，
對機房的電源及網路佈線規劃、空調系統、消防、監視設施及能源使用效率，
都有極大的認識及學習。

現行機關以主動服務為主，如何以資訊科技有效主動通報。
目前除了資訊資源的管理，
讓業務更有效的推動，
而如何應用資訊技術，達到知慧管理、主動通報。



學習 PYTHON
	
	請舉例描述一個您接收到顧客抱怨的經驗，
	您是如何處理的？
	某日上午，由於新程式在醫師開立材料處方時會當機，
	因為當時僅我一資訊人員在分院，且在其它診間觀測新程式的狀況，
	由於院長室無法連絡到我本人，致使醫師揚言罷診。
	我回到院長室時，先至診間向醫師致歉解釋，
	並請醫師以手寫單恢復看診，疏解病患的等候。
	再立刻回去除錯，並於一個鐘頭後，更換修正程式，
	再連絡醫事處請書記，將醫師手寫單重新鍵入資料庫。
	最後，重新寫一張測試看診程式的檢核表，並於會議提出，
	以避免下次類似情形發生。
	
	請舉例說明您如何充實您工作相關領域上的知識，
	並說明這些知識如何對您的工作產生助益。
	
	我認為必須把接受的資訊在腦海中形成抽象模型時，
	才能應用到生活及工作上。抽象模型基本上有兩個作用：

	
	讓我們在推論過程裡，可以集中焦點，
	過濾不必要的因素。
	例如：地圖即是描述地點的一種的抽象方式，
	它僅描述地點與連接道路的關係，
	讓我們可以藉由地圖來找出最佳的路徑。
		
	簡化推論的過程。
	例如：座標的發明使得幾何可以抽象成數學公式，
	並能以代數論證幾何來代替早期的作圖論證，
	這擴張了數學家的推論能力及想像空間，
	因為尺規必須受限於畫布面積上，
	而代數只要後面多加幾個零，
	就可描述以往尺規無法畫出的大面積圖形，
	多加個小數點，
	就可描述以往尺規無法畫出的極小面積圖形，
	這項抽象化更促進了微積分的發明，
	試想若沒有幾何代數，
	我們要如何畫出無窮小，
	無法描述無窮小就更別提描述微分的操作。
	
	而我充實知識，建立抽象模型的方法如下：

	每當我一想到某個問題時，會記錄在一個檔案裡，
	再選擇一個感興趣的問題，在工作之餘，或通勤時思考，
	直到將前因後果思考透澈，並建立出一套抽象模型，
	再用自已的話寫出摘要，記錄下來，再想另一個新問題。

	像是曾想過『何謂排程？』
	
	在鉅細靡遺的深研排程理論後，
	在工作上，得到一些新見解。例如：
	
    自已的日常工作安排，有那幾種排程方式，可以增進效率
    分析醫院領藥袋流程如何改善，使有限的人力能服務更多的病患
    理解多人多工的 Client/Server 下，
    Server 如何排程其服務，並以此來改寫資料庫存取程式
    更深入理解 IBM RS6000 主機磁碟陣列的排程管理
	
	這都是在我研究排程理論後得到新的觀點，
	並延展了我面對問題時，思考的廣度。
